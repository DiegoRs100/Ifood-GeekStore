// <auto-generated />
using System;
using GeekStore.Data.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GeekStore.Data.Migrations
{
    [DbContext(typeof(GeekStoreDbContext))]
    [Migration("20201208182442_CorrecaoTipoCampoNomeTbImagem")]
    partial class CorrecaoTipoCampoNomeTbImagem
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("GeekStore.Business.Dto_s.Produto", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataInclusao")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("IdImagem")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdUsuarioAlteracao")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdUsuarioInclusao")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .HasColumnType("VARCHAR(100)");

                    b.Property<double>("Preco")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("IdImagem")
                        .IsUnique()
                        .HasFilter("[IdImagem] IS NOT NULL");

                    b.ToTable("TB_PRODUTOS");
                });

            modelBuilder.Entity("GeekStore.Core.Dto_s.Imagem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Ativo")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataInclusao")
                        .HasColumnType("datetime2");

                    b.Property<string>("Extensao")
                        .HasColumnType("VARCHAR(5)");

                    b.Property<Guid?>("IdUsuarioAlteracao")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdUsuarioInclusao")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .HasColumnType("VARCHAR(200)");

                    b.HasKey("Id");

                    b.ToTable("TB_IMAGENS");
                });

            modelBuilder.Entity("GeekStore.Business.Dto_s.Produto", b =>
                {
                    b.HasOne("GeekStore.Core.Dto_s.Imagem", "Imagem")
                        .WithOne()
                        .HasForeignKey("GeekStore.Business.Dto_s.Produto", "IdImagem");
                });
#pragma warning restore 612, 618
        }
    }
}
